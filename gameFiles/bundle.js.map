{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./gameFiles/board.js","webpack:///./gameFiles/breakStijl.js","webpack:///./gameFiles/bricks.js","webpack:///./gameFiles/game.js","webpack:///./gameFiles/util.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;;;;AClFkB;AAClB;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA,+BAA+B,OAAO;AACtC;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,iBAAiB,OAAO;AACxB;AACA;AACA,iBAAiB,uBAAuB;AACxC;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB,sBAAsB;AAC5C,wBAAwB,yBAAyB;AACjD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;;;;;ACtFA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;;;;;;;;;;;;;;;ACVD;;AAEA;AACA;;AAEA;AACA;AACA,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,mBAAmB;AACnB,oBAAoB;;AAEpB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,gBAAgB;AAChB,iBAAiB;;;;AAIjB;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;;AAEpB;AACA,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;;AAEjB;AACA,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;AACpB,oBAAoB;;AAEpB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;AACjB,iBAAiB;;AAEjB;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACnFA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,kCAAkC;AACrD,qBAAqB,qCAAqC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,kCAAkC;AACxD,0BAA0B,qCAAqC;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;;AAEA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;;AAEA;AACA;;;AAGA;;;;;;;;;;;;;AC3PA;AAAA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;;AAEA;;AAEA","file":"./gameFiles/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./gameFiles/breakStijl.js\");\n","import {allBricks} from './bricks';\nimport Util from './util';\n\n\nclass Board {\n\nconstructor() {\n  this.gameBricks = this.brickGridGenerator();\n  // this.brickCounter = this.brickCounter.bind(this);\n  // this.brickCount = this.brickCounter(this.gameBricks);\n}\n\n\n//builds random row from premade set of shapes\nrowBuilder(row, leftEdge, rowHeight) {\n  // let rowXPosition = 80;\n  let jumbledRow = this.shuffle(row);\n  let gameRow = [];\n  for (let i = 0; i < row.length; i++) {\n    row[i].x = leftEdge;\n    row[i].y = rowHeight;\n    leftEdge += (row[i].width + 10);\n    gameRow.push(row[i]);\n  }\n  return gameRow;\n}\n\n\n//picks random shapes from row to push into final\nrowRandomizer(row) {\n  let gameRow = [];\n  for (let i = 0; i < row.length; i++) {\n    if (Util.randomNumber(0, 10) < 5) {\n      gameRow.push(row[i]);\n    }\n  }\n  return gameRow;\n}\n\n\n\n//shuffles all rows\nshuffle(rows) {\n  for (let i = rows.length - 1; i > 0; i--) {\n      const j = Math.floor(Math.random() * (i + 1));\n      [rows[i], rows[j]] = [rows[j], rows[i]];\n  }\n  return rows;\n}\n\n\n//BRICK GRID POPULATOR, call two above functions\nbrickGridGenerator() {\n  let gameBricks = [];\n  let shuffledRows = this.shuffle(allBricks);\n  for (let i = 0; i < 3; i++) {\n    gameBricks.push(shuffledRows[i]);\n  }\n  for (let i = 0; i < gameBricks.length; i++) {\n    if (i === 0) {\n      gameBricks[i] = this.rowBuilder(gameBricks[i], 50, 62);\n  } else if (i === 1) {\n      gameBricks[i] = this.rowBuilder(gameBricks[i], 50, 150);\n  } else {\n    gameBricks[i] = this.rowBuilder(gameBricks[i], 50, 238);\n  }\n    gameBricks[i] = this.rowRandomizer(gameBricks[i]);\n    }\n\n  return gameBricks;\n  }\n\n  //counts the bricks for score and game end purposes\n  // brickCounter(brickGrid) {\n  //   let brickCount = 0;\n  //   for (var i = 0; i < brickGrid.length; i++) {\n  //     for (var j = 0; j < brickGrid[i].length; j++) {\n  //       brickCount++;\n  //     }\n  //   }\n  //   return brickCount;\n  // }\n\n//END OF CLASS\n}\n\nexport default Board;\n","import Game from './game';\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const canvasEl = document.getElementById(\"myCanvas\");\n  canvasEl.width = Game.canvasWidth;\n  canvasEl.height = Game.canvasHeight;\n\n  const ctx = canvasEl.getContext(\"2d\");\n  const game = new Game(ctx);\n  game.playGame();\n});\n","import Util from './util';\n\n  let brickColumnCount = 10;\n  let brickRowCount = 3;\n\n  //brick rows\n  //row 1\n  // let brick1 = {x: 50, y: 40, width: 40, height: 40, status: 1, color: Util.hue()};\n  // let brick2 = {x: 70, y: 40, width: 50, height: 50, status: 1, color: Util.hue()};\n  // let brick3 = {x: 100, y: 40, width: 70, height: 30, status: 1, color: Util.hue()};\n  // let brick4 = {x: 150, y: 40, width: 120, height: 60, status: 1, color: Util.hue()};\n  // let brick5 = {x: 250, y: 40, width: 40, height: 70, status: 1, color: Util.hue()};\n  // let brick6 = {x: 270, y: 40, width: 60, height: 60, status: 1, color: Util.hue()};\n  // let brick7 = {x: 310, y: 40, width: 70, height: 60, status: 1, color: Util.hue()};\n  // let brick8 = {x: 360, y: 40, width: 60, height: 70, status: 1, color: Util.hue()};\n  // let brick9 = {x: 400, y: 40, width: 50, height: 70, status: 1, color: Util.hue()};\n  // let brick10 = {x: 430, y: 40, width: 40, height: 40, status: 1, color: Util.hue()};\n\n  let brick1 = {x: 50, y: 40, width: 30, height: 50, status: 1, color: Util.hue()};\n  let brick2 = {x: 70, y: 40, width: 40, height: 60, status: 1, color: Util.hue()};\n  let brick3 = {x: 100, y: 40, width: 60, height: 40, status: 1, color: Util.hue()};\n  let brick4 = {x: 150, y: 40, width: 110, height: 70, status: 1, color: Util.hue()};\n  let brick5 = {x: 250, y: 40, width: 30, height: 80, status: 1, color: Util.hue()};\n  let brick6 = {x: 270, y: 40, width: 50, height: 70, status: 1, color: Util.hue()};\n  let brick7 = {x: 310, y: 40, width: 60, height: 70, status: 1, color: Util.hue()};\n  let brick8 = {x: 360, y: 40, width: 50, height: 80, status: 1, color: Util.hue()};\n  let brick9 = {x: 400, y: 40, width: 40, height: 80, status: 1, color: Util.hue()};\n  let brick10 = {x: 430, y: 40, width: 30, height: 50, status: 1, color: Util.hue()};\n\n\n\n  //row2\n  // let brick11 = {x: 50, y: 100, width: 50, height: 40, status: 1, color: Util.hue()};\n  // let brick12 = {x: 80, y: 100, width: 60, height: 30, status: 1, color: Util.hue()};\n  // let brick13 = {x: 120, y: 100, width: 30, height: 70, status: 1, color: Util.hue()};\n  // let brick14 = {x: 130, y: 100, width: 80, height: 50, status: 1, color: Util.hue()};\n  // let brick15 = {x: 190, y: 100, width: 40, height: 60, status: 1, color: Util.hue()};\n  // let brick16 = {x: 210, y: 100, width: 90, height: 20, status: 1, color: Util.hue()};\n  // let brick17 = {x: 280, y: 100, width: 70, height: 60, status: 1, color: Util.hue()};\n  // let brick18 = {x: 330, y: 100, width: 60, height: 40, status: 1, color: Util.hue()};\n  // let brick19 = {x: 370, y: 100, width: 50, height: 70, status: 1, color: Util.hue()};\n  // let brick20 = {x: 400, y: 100, width: 70, height: 60, status: 1, color: Util.hue()};\n\n  //row2\n  let brick11 = {x: 50, y: 100, width: 40, height: 50, status: 1, color: Util.hue()};\n  let brick12 = {x: 80, y: 100, width: 50, height: 40, status: 1, color: Util.hue()};\n  let brick13 = {x: 120, y: 100, width: 20, height: 80, status: 1, color: Util.hue()};\n  let brick14 = {x: 130, y: 100, width: 70, height: 40, status: 1, color: Util.hue()};\n  let brick15 = {x: 190, y: 100, width: 30, height: 70, status: 1, color: Util.hue()};\n  let brick16 = {x: 210, y: 100, width: 80, height: 30, status: 1, color: Util.hue()};\n  let brick17 = {x: 280, y: 100, width: 60, height: 70, status: 1, color: Util.hue()};\n  let brick18 = {x: 330, y: 100, width: 50, height: 50, status: 1, color: Util.hue()};\n  let brick19 = {x: 370, y: 100, width: 40, height: 80, status: 1, color: Util.hue()};\n  let brick20 = {x: 400, y: 100, width: 60, height: 70, status: 1, color: Util.hue()};\n\n  //row3\n  // let brick21 = {x: 50, y: 160, width: 60, height: 50, status: 1, color: Util.hue()};\n  // let brick22 = {x: 90, y: 160, width: 30, height: 60, status: 1, color: Util.hue()};\n  // let brick23 = {x: 100, y: 160, width: 70, height: 70, status: 1, color: Util.hue()};\n  // let brick24 = {x: 150, y: 160, width: 50, height: 40, status: 1, color: Util.hue()};\n  // let brick25 = {x: 180, y: 160, width: 40, height: 50, status: 1, color: Util.hue()};\n  // let brick26 = {x: 200, y: 160, width: 80, height: 70, status: 1, color: Util.hue()};\n  // let brick27 = {x: 260, y: 160, width: 30, height: 60, status: 1, color: Util.hue()};\n  // let brick28 = {x: 270, y: 160, width: 60, height: 40, status: 1, color: Util.hue()};\n  // let brick29 = {x: 310, y: 160, width: 130, height: 50, status: 1, color: Util.hue()};\n  // let brick30 = {x: 420, y: 160, width: 50, height: 30, status: 1, color: Util.hue()};\n\n  let brick21 = {x: 50, y: 160, width: 50, height: 60, status: 1, color: Util.hue()};\n  let brick22 = {x: 90, y: 160, width: 20, height: 70, status: 1, color: Util.hue()};\n  let brick23 = {x: 100, y: 160, width: 60, height: 80, status: 1, color: Util.hue()};\n  let brick24 = {x: 150, y: 160, width: 40, height: 50, status: 1, color: Util.hue()};\n  let brick25 = {x: 180, y: 160, width: 30, height: 60, status: 1, color: Util.hue()};\n  let brick26 = {x: 200, y: 160, width: 70, height: 80, status: 1, color: Util.hue()};\n  let brick27 = {x: 260, y: 160, width: 20, height: 70, status: 1, color: Util.hue()};\n  let brick28 = {x: 270, y: 160, width: 50, height: 50, status: 1, color: Util.hue()};\n  let brick29 = {x: 310, y: 160, width: 120, height: 60, status: 1, color: Util.hue()};\n  let brick30 = {x: 420, y: 160, width: 50, height: 50, status: 1, color: Util.hue()};\n\n  // row collections\n  let brickRow1 = [brick1, brick2, brick3, brick4, brick5, brick6, brick7, brick8, brick9, brick10];\n  let brickRow2 = [brick11, brick12, brick13, brick14, brick15, brick16, brick17, brick18, brick19, brick20];\n  let brickRow3 = [brick21, brick22, brick23, brick24, brick25, brick26, brick27, brick28, brick29, brick30];\n\n  export const allBricks = [brickRow1, brickRow2, brickRow3];\n","import Board from './board';\nimport Util from './util';\n\nclass Game {\n  constructor(ctx) {\n    //CANVAS\n    this.canvasWidth = 700;\n    this.canvasHeight = 500;\n    this.ctx = ctx;\n    this.Board = new Board();\n    //BALL\n    this.ballX = this.canvasWidth / 2;\n    this.ballY = this.canvasHeight - 40;\n    this.ballRadius = 13;\n    this.ballColor = \"#ffffff\";\n    this.xSpeed = 3;\n    this.ySpeed = -3;\n    //PADDLE\n    this.paddleWidth = 100;\n    this.paddleHeight = 20;\n    this.paddleX = (this.canvasWidth - this.paddleWidth) / 2;\n    this.rightPressed = false;\n    this.leftPressed = false;\n    this.hitPaddleLastFrame = false;\n    //GAME\n    this.score = 0;\n    this.play = false;\n    this.draw = this.draw.bind(this);\n    this.playthis = this.playGame.bind(this);\n    this.bloop = new Audio('./gameFiles/sounds/low-bloop.wav');\n    this.victory = new Audio('./gameFiles/sounds/success.wav');\n    var audio1 = document.getElementById(\"myAudio1\");\n    this.victory.onended = function() {\n    alert(\"YOU WIN! PRESS RESTURN TO HAVE ANOTHER GO.\");\n    document.location.reload();\n    this.muted = false;\n    };\n  }\n\n\n\n  //BALL DRAWER\n  drawBall() {\n    this.ctx.beginPath();\n    this.ctx.arc(this.ballX, this.ballY, this.ballRadius, 0, Math.PI*2);\n    this.ctx.fillStyle = this.ballColor;\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n  //PADDLE DRAWER\n  drawPaddle() {\n    this.ctx.beginPath();\n    this.ctx.rect(this.paddleX, this.canvasHeight - this.paddleHeight, this.paddleWidth, this.paddleHeight);\n    this.ctx.fillStyle = \"#e83030\";\n    this.ctx.fill();\n    this.ctx.closePath();\n  }\n  //BRICK DRAWER\n  drawBricks() {\n    let brickCount = 0;\n    for (let i = 0; i < this.Board.gameBricks.length; i++) {\n      for (let j = 0; j < this.Board.gameBricks[i].length; j++) {\n        if (this.Board.gameBricks[i][j].status === 1) {\n          brickCount++;\n          this.ctx.beginPath();\n          this.ctx.rect(this.Board.gameBricks[i][j].x, this.Board.gameBricks[i][j].y, this.Board.gameBricks[i][j].width, this.Board.gameBricks[i][j].height);\n          this.ctx.fillStyle = this.Board.gameBricks[i][j].color;\n          this.ctx.fill();\n          this.ctx.closePath();\n          }\n        }\n      }\n      if (brickCount === 0) {\n        this.victory.play().onended();\n\n\n      }\n    }\n\n\n\n\n    // COLLISION DETECTION\n    collisionDetection() {\n      //BALL COLLISION COORDINATES\n      let ballRightX = this.ballX + this.ballRadius;\n      let ballLeftX = this.ballX - this.ballRadius;\n      let ballTopY = this.ballY - this.ballRadius;\n      let ballBottomY = this.ballY + this.ballRadius;\n\n        for(let c = 0; c < this.Board.gameBricks.length; c++) {\n            for(let r = 0; r < this.Board.gameBricks[c].length; r++) {\n                let b = this.Board.gameBricks[c][r];\n                if (b.status === 1) {\n                if ((ballLeftX > b.x && ballLeftX < b.x + b.width && this.ballY > b.y && this.ballY < b.y + b.height) ||\n                   (ballRightX > b.x && ballRightX < b.x + b.width && this.ballY > b.y && this.ballY < b.y + b.height )) {\n                     this.xSpeed = -this.xSpeed;\n                     b.status = 0;\n                     this.bloop.pause();\n                     this.bloop.currentTime = 0;\n                     this.bloop.play();\n                     this.score++;\n                }\n                if ((this.ballX > b.x && this.ballX < b.x + b.width && ballTopY > b.y && ballTopY < b.y + b.height) ||\n                  (this.ballX > b.x && this.ballX < b.x + b.width && ballBottomY > b.y && ballBottomY < b.y + b.height)) {\n                     this.ySpeed = -this.ySpeed;\n                     this.bloop.pause();\n                     this.bloop.currentTime = 0;\n                     this.bloop.play();\n                     b.status = 0;\n                     this.score++;\n                   }\n                }\n              }\n            }\n        }\n\n\n    bindKeys() {\n      document.addEventListener(\"keydown\", this.keyDownHandler.bind(this), false);\n      document.addEventListener(\"keyup\", this.keyUpHandler.bind(this), false);\n      document.addEventListener(\"mousemove\", this.mouseMoveHandler.bind(this), false);\n    }\n\n      //keypress handling\n    keyDownHandler(e) {\n      if(e.keyCode === 39) {\n          this.rightPressed = true;\n      }\n      else if(e.keyCode === 37) {\n          this.leftPressed = true;\n      }\n      else if(e.keyCode === 32) {\n        this.play = !this.play;\n      }\n      else if(e.keyCode === 77) {\n        this.muted = !this.muted;\n      }\n    }\n\n    keyUpHandler(e) {\n      if(e.keyCode == 39) {\n          this.rightPressed = false;\n      }\n      else if(e.keyCode == 37) {\n          this.leftPressed = false;\n      }\n    }\n\n    //mousehandling\n    mouseMoveHandler(e) {\n      let relativeX = e.clientX - this.canvasWidth.offsetLeft;\n      if ((relativeX > (this.paddleWidth / 2)) && (relativeX < (this.canvasWidth - (this.paddleWidth / 2)))) {\n        this.paddleX = relativeX - (this.paddleWidth / 2);\n      }\n    }\n\n    //score func\n    drawScore() {\n      this.ctx.font = \"20px Roboto\";\n      this.ctx.fillStyle = \"#0095DD\";\n      this.ctx.fillText(\"SCORE: \" + this.score, 8, 20);\n    }\n\n    //DRAW LOOP\n    draw() {\n      if (this.muted) {\n        this.bloop.muted = true;\n        this.victory.muted = true;\n      } else {\n        this.bloop.muted = false;\n        this.victory.muted = false;\n      }\n      this.ctx.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n      this.drawBricks();\n      this.drawBall();\n      this.drawPaddle();\n      this.drawScore();\n      this.collisionDetection();\n\n      if (this.play) {\n\n        //edges of ball\n        let ballRight = this.ballX + this.ballRadius;\n        let ballLeft = this.ballX - this.ballRadius;\n        let ballTop = this.ballY - this.ballRadius;\n        let ballBottom = this.ballY + this.ballRadius;\n\n    //bouncing off walls\n      if (this.ballX + this.xSpeed > this.canvasWidth - this.ballRadius || this.ballX + this.xSpeed < this.ballRadius) {\n          this.xSpeed = -this.xSpeed;\n      }\n      if (this.ballY + this.ySpeed < this.ballRadius) {\n          this.ySpeed = -this.ySpeed;\n      }\n      if ((((ballRight + this.xSpeed >= this.paddleX) && (ballRight + this.xSpeed <= this.paddleWidth + this.paddleX)) ||\n           ((ballLeft + this.xSpeed >= this.paddleX) && (ballLeft + this.xSpeed <= this.paddleX - this.paddleWidth))) &&\n            (ballBottom >= this.canvasHeight - this.paddleHeight)) {\n              if (!this.hitPaddleLastFrame) {\n                this.hitPaddleLastFrame = true;\n                this.ySpeed = -this.ySpeed;\n              } else {\n                this.hitPaddleLastFrame = true;\n              }\n\n            } else {\n              this.hitPaddleLastFrame = false;\n            }\n          //losing if the ball goes out the bottom\n      if (this.ballY + this.ySpeed > this.canvasHeight - this.ballRadius) {\n              this.xSpeed = 0;\n              this.ySpeed = 0;\n              alert(\"GAME OVER! PRESS ENTER TO TRY AGAIN\");\n              document.location.reload();\n          }\n\n    //moving the paddle\n      if(this.rightPressed && this.paddleX < this.canvasWidth - this.paddleWidth) {\n        this.paddleX += 7;\n      }\n      else if(this.leftPressed && this.paddleX > 0) {\n          this.paddleX -= 7;\n      }\n    //changing ball position\n      this.ballX += this.xSpeed;\n      this.ballY += this.ySpeed;\n\n    }\n\n\n      requestAnimationFrame(this.draw.bind(this));\n\n      //end of draw\n    }\n\n\n    //GAME LOOP\n    playGame() {\n      this.bindKeys();\n      this.draw();\n    }\n\n\n\n  //END OF CLASS\n}\n\nGame.canvasWidth = 700;\nGame.canvasHeight = 500;\n\n\nexport default Game;\n","//UTILITY\n\nconst Util = {\n\nhue() {\n  //Now calls the randomColor script, used to used this function:\n  // return 'rgb(' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ',' + (Math.floor(Math.random() * 256)) + ')';\n  var color = randomColor();\n  return color;\n},\n\n//random brick draw percentage generator\nrandomNumber(min, max) {\n  return Math.floor(Math.random() * (max - min) ) + min;\n  }\n\n};\n\nexport default Util;\n"],"sourceRoot":""}